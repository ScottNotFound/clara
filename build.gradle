plugins {
    id 'com.jetbrains.python.envs' version '0.0.25'

    id 'java'
    id 'idea'
    id 'jacoco'
    id 'cpp'
    id 'signing'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // interfacing and logging
    compile 'commons-cli:commons-cli:1.4'
    compile 'commons-io:commons-io:2.6'
    compile 'org.apache.logging.log4j:log4j-api:2.10.0'
    compile 'org.apache.logging.log4j:log4j-core:2.10.0'

    // chemistry libraries
    compile 'org.apache.chemistry.opencmis:chemistry-opencmis-commons-impl:1.1.0'
    compile 'uk.ac.cam.ch.opsin:opsin-core:2.3.1'
    compile 'org.openscience.cdk:cdk-bundle:2.1.1'

    // machine learning (TensorFlow)
    compile 'org.tensorflow:tensorflow:1.6.0'

}

sourceSets {
    api {
        java {
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
        }
    }
    main {
        java {

        }
    }
    test {
        java {

        }
    }
}

model {
    toolChains {
        gcc(Gcc) {
            path "%MINGW%/bin"
        }
    }
    flavors {
        passing
        failing
    }
    platforms {
        x86 {
            architecture "x86"
        }
    }
    components {
        main(NativeExecutableSpec) {
            targetPlatform "x86"

            sources {
                cpp {
                    source {
                        srcDir "src/main/cpp"
                        include "**/*.cpp"
                    }
                }
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}


jar {
    manifest {
        attributes 'Bundle-License': 'https://www.apache.org/licenses/LICENSE-2.0.txt'
        attributes 'Bundle-Name': 'Clara'
        attributes 'Main-Class': 'net.scottnotfound.clara.Clara'
        attributes 'Bundle-Version': version
    }
}


task("fatJar") {
    jar {
        from {
            configurations.compile.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }
        manifest {
            attributes 'Bundle-License': 'https://www.apache.org/licenses/LICENSE-2.0.txt'
            attributes 'Bundle-Name': 'Clara'
            attributes 'Main-Class': 'net.scottnotfound.clara.Clara'
            attributes 'Bundle-Version': version
        }
    }
    dependsOn 'jar'
}
